import streamlit as st
from mistralai import Mistral
import fitz
from pathlib import Path
import os
import shutil

OUTPUT_DIR = Path("output")

model = "mistral-large-latest"

client = Mistral(api_key=os.environ['MISTRAL_API_KEY'])


def process_files(uploaded_file):
    res = ""
    try:
        if OUTPUT_DIR.is_dir():
            shutil.rmtree(OUTPUT_DIR)
        OUTPUT_DIR.mkdir()
        file_path = OUTPUT_DIR / uploaded_file.name
        file_path.write_bytes(uploaded_file.getbuffer())

        uploaded_pdf = client.files.upload(
            file={
                "file_name": uploaded_file.name,
                "content": open(file_path, "rb"),
            },
            purpose="ocr"
        )

        signed_url = client.files.get_signed_url(file_id=uploaded_pdf.id)
        prompt = f"""
                    A partir du document (Facture.pdf), cr√©e le JSON incluant
                    - Identifiant de la facture (Identifiant)
                    - Date de la facture (Date_Creation)
                    - Date de paiement de la facture (Date_Paiement)
                    - D√©nomination du vendeur (Vendeur)
                    - Num√©ro SIRET du vendeur (SIRET_Vendeur)
                    - Pays du vendeur (Pays_Vendeur)
                    - D√©nomination de l'acheteur (Acheteur)
                    - Num√©ro SIRET de l'acheteur (SIRET_Acheteur)
                    - Pays de l'acheteur (Pays_Acheteur)
                    - Devise de la facture (Devise)
                    - Total HT de la facture (Total_HT)
                    - Total soumis √† TVA de la facture (Total_TVA)
                    - Total TTC de la facture (Total_TTC)
                    - Reste √† payer (Reste)
                    - Taux de TVA 20%, 10% ou 5.5% (TVA) 
                    - La liste des elements de la facture (Elements), chaque element est d√©fini par ID, Description, Quantite, Prix_HT, TVA et Prix_Totale
                    Puis, √† partir du JSON de la facture, cr√©e et retourne uniquement sans explication juste le csv (avec ; comme s√©parateur) 
                    des √©critures comptables en format FEC (fichiers des √©critures comptables) pour la saisie comptable """

        messages = [
            {
                "role": "user",
                "content": [
                    {
                        "type": "text",
                        "text": prompt
                    },
                    {
                        "type": "document_url",
                        "document_url": signed_url.url
                    }
                ]
            }
        ]

        # Get the chat response
        chat_response = client.chat.complete(
            model="mistral-large-latest",
            messages=messages
        )

        res = chat_response.choices[0].message.content

    except Exception as e:
        st.error(f"Erreur avec {uploaded_file.name}: {str(e)}")
    return res

# Interface utilisateur
def main():
    st.title("üìä Reconnaissance Automatique des Factures")
    
    uploaded_file = st.file_uploader(
        "T√©l√©charger votre Facture en format PDF",
        accept_multiple_files=False,
        type=["pdf"]
    ) 

    if st.button("D√©marrer la conversion FEC"):
        if uploaded_file:
            status_placeholder = st.empty()
            status_placeholder.info(f"Traitement de {uploaded_file.name} ‚åõ")
            results = process_files(uploaded_file)
            if results != "":
                st.success("‚úÖ Conversion termin√©e avec succ√®s !")
                st.write(results)
                st.write("""### Explications des champs :
- **JournalCode** : Code du journal (ici, "AC" pour Journal d'achat).
- **JournalLib** : Libell√© du journal (ici, "Journal d'achat").
- **EcritureNum** : Num√©ro de l'√©criture.
- **EcritureDate** : Date de l'√©criture (format AAAAMMJJ).
- **CompteNum** : Num√©ro du compte.
- **CompteLib** : Libell√© du compte.
- **CompAuxNum** : Num√©ro du compte auxiliaire (optionnel).
- **CompAuxLib** : Libell√© du compte auxiliaire (optionnel).
- **PieceRef** : R√©f√©rence de la pi√®ce justificative (ici, le num√©ro de la facture).
- **PieceDate** : Date de la pi√®ce justificative (format AAAAMMJJ).
- **EcritureLib** : Libell√© de l'√©criture.
- **Debit** : Montant d√©bit√©.
- **Credit** : Montant cr√©dit√©.
- **EcritureLet** : Lettre de l'√©criture (optionnel).
- **DateLet** : Date de la lettre de l'√©criture (optionnel).
- **ValidDate** : Date de validation (optionnel).
- **Montantdevise** : Montant en devise (optionnel).
- **Idevise** : Code de la devise (optionnel).

### Remarques :

- Assurez-vous que les comptes utilis√©s correspondent bien √† votre plan comptable.
- Si la TVA est applicable, il faudra ajouter une ligne suppl√©mentaire pour enregistrer la TVA d√©ductible.
- Le format FEC peut varier l√©g√®rement en fonction des logiciels comptables, mais les champs principaux restent g√©n√©ralement les m√™mes.

Ces √©critures comptables permettent de refl√©ter correctement la facture dans votre comptabilit√©.""")

if __name__ == "__main__":
    main()
